#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CityWebApplication.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CityDb")]
	public partial class CityDataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertResident(Resident instance);
    partial void UpdateResident(Resident instance);
    partial void DeleteResident(Resident instance);
    #endregion
		
		public CityDataContextDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CityDbConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CityDataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CityDataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CityDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CityDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Resident> Residents
		{
			get
			{
				return this.GetTable<Resident>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resident")]
	public partial class Resident : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _first_name;
		
		private string _last_name;
		
		private System.DateTime _date_Of_Birth;
		
		private string _address_in_city;
		
		private int _seniority;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Ondate_Of_BirthChanging(System.DateTime value);
    partial void Ondate_Of_BirthChanged();
    partial void Onaddress_in_cityChanging(string value);
    partial void Onaddress_in_cityChanged();
    partial void OnseniorityChanging(int value);
    partial void OnseniorityChanged();
    #endregion
		
		public Resident()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_Of_Birth", DbType="Date NOT NULL")]
		public System.DateTime date_Of_Birth
		{
			get
			{
				return this._date_Of_Birth;
			}
			set
			{
				if ((this._date_Of_Birth != value))
				{
					this.Ondate_Of_BirthChanging(value);
					this.SendPropertyChanging();
					this._date_Of_Birth = value;
					this.SendPropertyChanged("date_Of_Birth");
					this.Ondate_Of_BirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_in_city", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string address_in_city
		{
			get
			{
				return this._address_in_city;
			}
			set
			{
				if ((this._address_in_city != value))
				{
					this.Onaddress_in_cityChanging(value);
					this.SendPropertyChanging();
					this._address_in_city = value;
					this.SendPropertyChanged("address_in_city");
					this.Onaddress_in_cityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_seniority", DbType="Int NOT NULL")]
		public int seniority
		{
			get
			{
				return this._seniority;
			}
			set
			{
				if ((this._seniority != value))
				{
					this.OnseniorityChanging(value);
					this.SendPropertyChanging();
					this._seniority = value;
					this.SendPropertyChanged("seniority");
					this.OnseniorityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
